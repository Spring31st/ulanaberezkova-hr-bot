# feedback.py
import logging
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from aiogram import Dispatcher, F

logger = logging.getLogger(__name__)

# ---------- –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ----------
with open("data.json", encoding="utf-8") as f:
    DATA = json.load(f)

HR_ADMIN_ID = DATA["admin_ids"][0]   # –±–µ—Ä—ë–º –ø–µ—Ä–≤—ã–π ID –∏–∑ admin_ids

# ---------- —Å–æ—Å—Ç–æ—è–Ω–∏–µ ----------
class FeedbackStates(StatesGroup):
    typing = State()

# ---------- —Ö—ç–Ω–¥–ª–µ—Ä—ã ----------
def register_feedback(dp: Dispatcher):
    """–ü–æ–¥–∫–ª—é—á–∞–µ–º —Ö—ç–Ω–¥–ª–µ—Ä—ã –∫ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–º—É Dispatcher"""

    @dp.callback_query(F.data == "leave_feedback")
    async def cb_leave_feedback(callback, state: FSMContext):
        await callback.message.edit_text(
            "‚úèÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –∞–Ω–æ–Ω–∏–º–Ω—ã–π –æ—Ç–∑—ã–≤:\n—á—Ç–æ –Ω—Ä–∞–≤–∏—Ç—Å—è, —á—Ç–æ –º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å –∏ —Ç.–¥."
        )
        await state.set_state(FeedbackStates.typing)
        await callback.answer()

    @dp.message(FeedbackStates.typing)
    async def receive_feedback(msg: Message, state: FSMContext, bot):
        text = msg.text
        try:
            await bot.send_message(
                HR_ADMIN_ID,
                f"üÜï **–ê–Ω–æ–Ω–∏–º–Ω—ã–π –æ—Ç–∑—ã–≤**\n\n{text}",
                parse_mode="Markdown"
            )
            answer_text = "‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à –æ—Ç–∑—ã–≤ –∞–Ω–æ–Ω–∏–º–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω HR."
        except Exception as e:
            logger.warning("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ HR: %s", e)
            answer_text = "üòî –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Å–µ–π—á–∞—Å –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ HR. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."

        kb = InlineKeyboardMarkup(
            inline_keyboard=[[InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]]
        )
        await msg.answer(answer_text, reply_markup=kb)
        await state.clear()
